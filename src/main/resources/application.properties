server.port=8912

security.oauth2.resource.filter-order=3
#security.basic.enabled=true
#security.user.name=thy
#security.user.password=1234qwer


#security.oauth2.resource.user-info-uri=http://localhost:8911/users/user_info
security.oauth2.resource.token-info-uri=http://localhost:8911/oauth/check_token
#security.oauth2.resource.prefer-token-info=true
security.oauth2.resource.id=resource_id
security.oauth2.client.clientId=devglan-client
security.oauth2.client.clientSecret=devglan-secret
#security.oauth2.resource.service-id=
#security.oauth2.resource.token-type=Bearer

#security.oauth2.resource.user-info-uri：配置userinfo的url地址
#security.oauth2.resource.token-info-uri：配置check-token的url地址；
#security.oauth2.resource.prefer-token-info=true，如果上面两个都配置了，更倾向于用哪个


#使用jwt是配置
#security.oauth2.resource.jwt.key-value

#mysql 配置
spring.datasource.url=jdbc:mysql://127.0.0.1/amoy?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=1234qwer

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#开启对sql语句的打印
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
#在生产环境中不要使用create-drop，这样会在程序启动时先删除旧的，再自动创建新的，最好使用update
#create：每次加载Hibernate时都会删除上一次生成的表，然后重新生成新表，即使两次没有任何修改也会这样执行，这就导致每次启动都是一个新的数据库，也是导致数据丢失的重要原因。
#
#create-drop：每次加载Hibernate时都会生成表，但当SessionFactory关闭时，所生成的表将自动删除。
#
#update：最常用的属性值，第一次加载Hibernate时创建数据表（前提是需要先有数据库），以后加载HIbernate时只会根据model更新，即使model已经删除了某些属性，数据表也不会随之删除字段。
#
#validate：每次加载Hibernate时都会验证数据表结构，只会和已经存在的数据表进行比较，根据model修改表结构，但不会创建新表。
#none 禁用ddl


spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=1234qwer
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0


#启用远程更新
spring.devtools.remote.secret=1234
spring.devtools.remote.debug.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.remote.debug.local-port=8007
spring.devtools.restart.enabled=true
spring.devtools.restart.exclude=static/**


#redis 显示中文
#redis-cli --raw


#{
#"access_token": "c0192d8b-9af2-4096-b960-92f855bf90a6",
#"token_type": "bearer",
#"refresh_token": "f5b2b66a-ab52-4681-b784-79714b764dad",
#"expires_in": 3599,
#"scope": "read write trust"
#}

#{
#"exp": 1516851344,
#"user_name": "Alex123",
#"authorities": [
#"ROLE_ADMIN"
#],
#"client_id": "devglan-client",
#"scope": [
#"read",
#"write",
#"trust"
#]
#}